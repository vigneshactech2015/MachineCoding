import {useState} from "react";

export default function DynamicForm(){
    const[formFields,setFormFields] = useState([{key:'',value:'',errors:{key:null,value:null}}])

    function handleChange(e,index){
        e.preventDefault()
        e.persist();

        setFormFields((prev)=>{
            return prev.map((item,i)=>{
                if(i === index){
                    return item
                }

                return {
                    ...item,
                    [e.target.name] : e.target.value,

                    errors:{
                        ...item.errors,
                        [e.target.name]:e.target.value.length>0?null:[e.target.name]+"Is required"
                    }
                }
            })
        })
    }

    function formIsValid(){

        const someEmpty = formFields.some(
            (item) => item.key === "" || item.value === ""
          );
      
          if (someEmpty) {
            formFields.map((item, index) => {
              const allPrev = [...formFields];
      
              if (formFields[index].key === "") {
                allPrev[index].errors.key = "Key is required";
              }
      
              if (formFields[index].value === "") {
                allPrev[index].errors.value = "Value is required";
              }
              setFormFields(allPrev);
            });
          }
      
          return !someEmpty;
    }

    function addNewFields(e,index){
        e.preventDefault();
        let obj = {
            key:'',
            value:'',
            errors:{
                key:null,
                value:null
            }
        }
        setFormFields([...formFields,obj])
    }

    function deleteField(e,index){
        e.preventDefault();
        let data = [...formFields];
        data.splice(index,1);
        setFormFields(data)
    }

    function submitHandler(e){
        e.preventDefault();
        if(formIsValid()){
            console.log('>>>submitted',formFields)
        }
      
    }

    return(
        <div>
        <form onSubmit={submitHandler}>
        <div>
        {formFields.map((forms,index)=>{
            return(
                <div key={index}>
                <input type="text" placeholder="key" name="key" value={forms.key} onChange={(e)=>handleChange(e,index)}/>
                {forms.errors.key && <p>{forms.errors.key}</p>}
                <input type="text" placeholder="value" name="value" value={forms.value} onChange={(e)=>handleChange(e,index)}/>
                {forms.errors.value && <p>{forms.errors.value}</p>}
                <button onClick={(e)=>addNewFields(e,index)}>Add</button>
                <button onClick={(e)=>deleteField(e,index)}>Delete</button>
                </div>
            )
        })}
        </div>
        <button onClick={submitHandler}>Submit</button>
        </form>
        </div>
    )
}
